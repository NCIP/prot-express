function FileData_Pairs(x)
{
x.t("notes","field");
x.t("protocols","created");
x.t("required","field");
x.t("field","blank");
x.t("field","input");
x.t("field","enter");
x.t("field","data");
x.t("blank","notes");
x.t("outputs","protocol");
x.t("working","protexpress");
x.t("leave","field");
x.t("protexpress","creating");
x.t("new","input");
x.t("new","experiment");
x.t("want","add");
x.t("file","name");
x.t("file","associated");
x.t("able","add");
x.t("add","outputs");
x.t("add","new");
x.t("add","able");
x.t("add","input");
x.t("add","inputs");
x.t("creating","new");
x.t("name","field");
x.t("name","input");
x.t("name","data");
x.t("area","click");
x.t("input","required");
x.t("input","want");
x.t("input","add");
x.t("input","select");
x.t("input","row");
x.t("input","material");
x.t("input","optional");
x.t("input","protocol");
x.t("pertinent","input");
x.t("begin","step");
x.t("select","existing");
x.t("row","click");
x.t("row","corresponding");
x.t("step","procedure");
x.t("filename","field");
x.t("added","protocols");
x.t("material","leave");
x.t("enter","file");
x.t("enter","name");
x.t("enter","information");
x.t("click","begin");
x.t("click","select");
x.t("click","row");
x.t("existing","input");
x.t("existing","inputs");
x.t("already","added");
x.t("experiment","adding");
x.t("page","appears");
x.t("data","file");
x.t("data","filename");
x.t("optional","field");
x.t("information","pertinent");
x.t("procedure","click");
x.t("protocol","working");
x.t("protocol","add");
x.t("protocol","name");
x.t("protocol","select");
x.t("protocol","page");
x.t("protocol","adding");
x.t("created","add");
x.t("corresponding","input");
x.t("adding","inputs");
x.t("associated","input");
x.t("inputs","area");
x.t("inputs","already");
x.t("inputs","protocol");
}

<?xml version="1.0" encoding="UTF-8"?>

<!--L
  Copyright 5AM Solutions, Inc.

  Distributed under the OSI-approved BSD 3-Clause License.
  See http://ncip.github.com/prot-express/LICENSE.txt for details.
L-->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${test.jdbc.driverClassName}" />
        <property name="username" value="${test.jdbc.username}" />
        <property name="password" value="${test.jdbc.password}" />
        <property name="url" value="${test.jdbc.url}" />
    </bean>

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
        <property name="configLocation" value="classpath:hibernate.cfg.xml" />
        <property name="configurationClass">
            <value>org.hibernate.cfg.AnnotationConfiguration</value>
        </property>
        <property name="entityInterceptor">
            <bean class="gov.nih.nci.protexpress.data.interceptor.ProtExpressHibernateInterceptor" />
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${test.hibernate.dialect}</prop>
                <!-- If you need to get the sql log from hibernate use the corresponding log4j configuration -->
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
            </props>
        </property>
    </bean>
</beans>
function FileData_Pairs(x)
{
x.t("new/existing","protocol");
x.t("protocols","click");
x.t("protocols","experiment");
x.t("protocols","created");
x.t("available","protocols");
x.t("protoco","tab");
x.t("reusable","entity");
x.t("applied","experiment");
x.t("owner","respective");
x.t("create","experiment");
x.t("description","fields");
x.t("description","associated");
x.t("contact","information");
x.t("instance","protocol");
x.t("required","field");
x.t("apply","runs");
x.t("later","editing");
x.t("later","click");
x.t("experiments","time");
x.t("experiments","however");
x.t("field","enter");
x.t("working","protexpress");
x.t("protexpress","creating");
x.t("time","add");
x.t("editing","experiment");
x.t("however","instance");
x.t("new","selecting");
x.t("new","experiment");
x.t("new","protocol");
x.t("want","select");
x.t("includes","least");
x.t("entering","information");
x.t("list","available");
x.t("add","new/existing");
x.t("add","protocols");
x.t("add","new");
x.t("add","input");
x.t("add","existing");
x.t("add","protocol");
x.t("complete","complete");
x.t("complete","experiment");
x.t("complete","protocol");
x.t("creating","new");
x.t("creating","experiment");
x.t("name","description");
x.t("name","field");
x.t("name","new");
x.t("protocol\u2019s","description");
x.t("experiment\u2019s","first");
x.t("find","protocol");
x.t("respective","fields");
x.t("search","protocol");
x.t("fields","entering");
x.t("fields","search");
x.t("fields","optional");
x.t("input","output");
x.t("begin","add");
x.t("selected","name");
x.t("display","protocols");
x.t("checkbox","find");
x.t("first","create");
x.t("first","experiment");
x.t("select","click");
x.t("select","existing");
x.t("appears","experiment");
x.t("unique","cannot");
x.t("cannot","apply");
x.t("software","associated");
x.t("least","complete");
x.t("least","input");
x.t("appear","list");
x.t("click","add");
x.t("click","display");
x.t("click","select");
x.t("click","protocol");
x.t("enter","name");
x.t("enter","protocol\u2019s");
x.t("existing","protoco");
x.t("existing","experiment");
x.t("existing","protocol");
x.t("mutliple","experiments");
x.t("selecting","existing");
x.t("already","selected");
x.t("runs","experiments");
x.t("experiment","later");
x.t("experiment","working");
x.t("experiment","includes");
x.t("experiment","add");
x.t("experiment","creating");
x.t("experiment","begin");
x.t("experiment","existing");
x.t("experiment","page");
x.t("experiment","information");
x.t("experiment","protocol");
x.t("experiment","navigation");
x.t("experiment","run");
x.t("experiment","following");
x.t("experiment","adding");
x.t("output","complete");
x.t("output","add");
x.t("page","add");
x.t("information","editing");
x.t("information","creating");
x.t("information","fields");
x.t("information","protocol");
x.t("optional","note");
x.t("instrument","contact");
x.t("protocol","reusable");
x.t("protocol","applied");
x.t("protocol","owner");
x.t("protocol","required");
x.t("protocol","later");
x.t("protocol","new");
x.t("protocol","want");
x.t("protocol","includes");
x.t("protocol","add");
x.t("protocol","complete");
x.t("protocol","experiment\u2019s");
x.t("protocol","appears");
x.t("protocol","existing");
x.t("protocol","experiment");
x.t("protocol","page");
x.t("protocol","created");
x.t("protocol","adding");
x.t("protocol","tab");
x.t("note","content");
x.t("users","checkbox");
x.t("created","add");
x.t("created","appear");
x.t("created","users");
x.t("entity","across");
x.t("run","editing");
x.t("run","add");
x.t("run","begin");
x.t("run","first");
x.t("run","unique");
x.t("run","information");
x.t("following","click");
x.t("adding","protocols");
x.t("adding","protocol");
x.t("across","mutliple");
x.t("tab","protocols");
x.t("tab","add");
x.t("tab","already");
x.t("associated","software");
x.t("associated","instrument");
x.t("content","name");
}
